{"version":3,"sources":["webpack:///zlib (ignored)","webpack:///fs (ignored)","webpack:///http (ignored)","webpack:///https (ignored)","webpack:///url (ignored)","webpack:///src/app/certifications/certifications.service.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/trainings/trainings.component.ts","webpack:///src/app/trainings/trainings.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/navigation/sidebar/sidebar.component.ts","webpack:///src/app/navigation/sidebar/sidebar.component.html","webpack:///src/app/experiences/experiences.component.ts","webpack:///src/app/experiences/experiences.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/experiences/experiences.service.ts","webpack:///src/app/trainings/trainings.service.ts","webpack:///src/app/skills/skills.component.ts","webpack:///src/app/skills/skills.component.html","webpack:///src/app/skills/skills.service.ts","webpack:///src/app/skills/skillmatcard/skillmatcard.component.ts","webpack:///src/app/skills/skillmatcard/skillmatcard.component.html","webpack:///src/app/shared/application.service.ts","webpack:///src/app/navigation/header/header.component.ts","webpack:///src/app/navigation/header/header.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/material.module.ts","webpack:///src/app/certifications/certifications.component.ts","webpack:///src/app/certifications/certifications.component.html","webpack:///src/app/shared/ui.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CertificationsService","db","uIService","certifications","certificationsSubject","isLoading","isLoadingSubject","errorSubject","fbSubscription","collection","snapshotChanges","pipe","docArray","map","doc","payload","data","subscribe","next","sort","a","b","date","error","showSnackbar","providedIn","AboutComponent","selector","templateUrl","styleUrls","HomeComponent","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TrainingsComponent","trainingService","trainings","isLoadingSubscription","fetchTrainings","trainingsSubscription","trainingsSubject","unsubscribe","AppComponent","title","SidebarComponent","applicationService","sidenavToggle","headers","getHeaders","emit","ExperiencesComponent","experiencesService","experiences","experiencesSubscription","experiencesSubject","fetchExperiences","AppModule","provide","useValue","initializeApp","declarations","imports","providers","bootstrap","contactForm","ContactComponent","httpClient","uiService","router","messageSent","errorMessageSent","firstname","required","lastname","email","phonenumber","message","Date","value","post","navigate","firebaseSubscription","ExperiencesService","beginningDate","TrainingsService","SkillsComponent","skillsService","skills","skillCategories","getSkillCategories","skillsSubscription","skillSubject","fetchSkills","SkillsService","rank","SkillmatcardComponent","skill","ApplicationService","route","icon","selectedHeaderSubject","header","selectedHeader","HeaderComponent","routerSubscription","events","event","setSelectedHeader","find","selectedHeaderSubscription","onToggleSidenav","routes","path","component","AppRoutingModule","forRoot","exports","MaterialModule","CertificationsComponent","certificationsService","certificationsSubscription","fetchCertifications","source","window","open","UIService","snackbar","duration","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Injectable } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Certification } from '../shared/cv.model';\r\nimport { UIService } from '../shared/ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CertificationsService {\r\n  certifications: Certification[] = [];\r\n  fbSubscription: Subscription;\r\n  certificationsSubject = new Subject<Certification[]>();\r\n  isLoading = true;\r\n  isLoadingSubject = new Subject<boolean>();\r\n  errorSubject = new Subject<string>();\r\n\r\n  constructor(private db: AngularFirestore, private uIService: UIService) {}\r\n\r\n  fetchCertifications() {\r\n    this.fbSubscription = this.db\r\n      .collection('certifications')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docArray) => {\r\n          return docArray.map((doc) => {\r\n            return {\r\n              ...(doc.payload.doc.data() as Certification),\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe(\r\n        (certifications: Certification[]) => {\r\n          this.certifications = certifications;\r\n          this.certificationsSubject.next(\r\n            [...this.certifications].sort((a, b) => {\r\n              return (b.date as any) - (a.date as any);\r\n            })\r\n          );\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n          this.uIService.showSnackbar(\r\n            'Une erreur est survenue, veuillez réessayer.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css'],\n})\nexport class AboutComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<section class=\"aboutme\">\n  <mat-card class=\"card\">\n    <mat-card-title class=\"title\">\n      Qui suis-je?\n    </mat-card-title>\n    <img class=\"me\" src=\"assets/moi.png\">\n    <mat-card-content class=\"content\">\n      De formation initiale en chimie des matériaux, j'ai récemment choisi de réorienter ma carrière professionnelle\n      dans le monde du développement informatique. Pourquoi ce domaine ? Tout simplement parce qu'il me permet permet\n      d'allier technicité, réflexion et logique ! Après une\n      première formation de trois mois de développeur JAVA/JEE, la situation sanitaire actuelle m'a obligée à mettre mes\n      projets en stand-by. Dans l'attente de trouver une nouvelle opportunité professionnelle, je profite du confinement\n      pour mettre à jour et développer de nouvelles compétences en auto-formation.\n    </mat-card-content>\n    <mat-card-content class=\"content\">\n      Sur le plan personnel, mes passions sont variées. J'occupe une grande partie de mon temps libre à faire du <a\n        href=\"www.geocaching.com\">Géocaching</a>, sorte de chasse aux trésor géante, nécessitant réflexion et permetant\n      de partir à la\n      découverte du patrimoine. Je suis également passionnée de cinéma, de danse bretonne et de jeux de sociétés !\n    </mat-card-content>\n  </mat-card>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<section class=\"home\">\n  <div class=\"global\">\n    <h1>Mariane AUDO</h1>\n    <h2>Développeur Junior</h2>\n    <h2>JAVA / JEE / Angular</h2>\n    <h3>Basée à Rennes (35)</h3>\n    <a class=\"linkedin\" href=\"https://www.linkedin.com/in/mariane-audo-07954041/?originalSubdomain=fr\" target=\"_blank\"><img class=\"icone\"\n        src=\"assets/linkedin.png\"></a>\n    <a href=\"https://github.com/marianeaudo\" target=\"_blank\"><img class=\"icone\" src=\"assets/github.png\"></a>\n  </div>\n  <div class=\"copyright\">© Mariane Audo 2020</div>\n</section>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase : {\n    apiKey: \"AIzaSyBVrxGibsmzorZ8_9M9CAGDnOBKn-JZXB0\",\n    authDomain: \"marianeaudo-website.firebaseapp.com\",\n    databaseURL: \"https://marianeaudo-website.firebaseio.com\",\n    projectId: \"marianeaudo-website\",\n    storageBucket: \"marianeaudo-website.appspot.com\",\n    messagingSenderId: \"444882523452\",\n    appId: \"1:444882523452:web:1e453ef0d6bd63d54d3a39\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { TrainingsService } from './trainings.service';\nimport { Training } from '../shared/cv.model';\n\n@Component({\n  selector: 'app-trainings',\n  templateUrl: './trainings.component.html',\n  styleUrls: ['./trainings.component.css']\n})\nexport class TrainingsComponent implements OnInit, OnDestroy {\n\n  trainings: Training[] = [];\n  trainingsSubscription: Subscription;\n  isLoading = true;\n  isLoadingSubscription: Subscription;\n\n  constructor(private trainingService: TrainingsService) { }\n\n  ngOnInit(): void {\n    this.isLoadingSubscription = this.trainingService.isLoadingSubject.subscribe((isLoading: boolean) => {\n      this.isLoading = isLoading;\n    });\n    this.trainingService.fetchTrainings();\n    this.trainingsSubscription = this.trainingService.trainingsSubject.subscribe((trainings: Training[]) => {\n      this.trainings = trainings;\n    });\n  }\n\n  ngOnDestroy() {\n    this.trainingsSubscription.unsubscribe();\n    this.isLoadingSubscription.unsubscribe();\n  }\n\n}\n","<section class=\"trainings\">\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\n  <div *ngFor=\"let training of trainings\">\n    <mat-card class=\"card\">\n      <mat-card-title *ngIf=\"!isLoading\" class=\"title\">\n        {{ training.name }}\n      </mat-card-title>\n      <mat-card-subtitle *ngIf=\"!isLoading\" class=\"subtitle\">\n         {{ training.beginningDate.seconds * 1000 | date: 'MMMM yyyy' | titlecase}} <span *ngIf=\"training.duration\">-</span> {{ training.duration}} <span *ngIf=\"training.duration\">mois</span>\n      </mat-card-subtitle>\n      <img *ngIf=\"!isLoading\" class=\"logo\" [src]=\"training.schoolImage\">\n      <mat-card-content *ngIf=\"!isLoading\" class=\"content\">\n        {{ training.content }}\n      </mat-card-content>\n    </mat-card>\n  </div>\n</section>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'personalWebsite';\n}\n","<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\">\n    <app-sidebar (sidenavToggle)=\"sidenav.toggle()\"></app-sidebar>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <app-header (sidenavToggle)=\"sidenav.toggle()\"></app-header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\nimport { Header } from 'src/app/shared/application.model';\nimport { ApplicationService } from 'src/app/shared/application.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent implements OnInit {\n  @Output() sidenavToggle = new EventEmitter<void>();\n\n  headers: Header[] = [];\n\n  constructor(private applicationService: ApplicationService) {}\n\n  ngOnInit(): void {\n    this.headers = this.applicationService.getHeaders();\n  }\n\n  onToggle() {\n    this.sidenavToggle.emit();\n  }\n}\n","<mat-nav-list>\r\n  <a *ngFor=\"let header of headers\" mat-list-item [routerLink]=\"header.route\" (click)=\"onToggle()\">\r\n    <mat-icon>{{ header.icon }}</mat-icon>\r\n    <span class=\"nav-caption\">{{ header.title }}</span>\r\n  </a>\r\n</mat-nav-list>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ExperiencesService } from './experiences.service';\nimport { Experience } from '../shared/cv.model';\n\n@Component({\n  selector: 'app-experiences',\n  templateUrl: './experiences.component.html',\n  styleUrls: ['./experiences.component.css'],\n})\nexport class ExperiencesComponent implements OnInit, OnDestroy {\n  experiences: Experience[] = [];\n  experiencesSubscription: Subscription;\n  isLoading = true;\n  isLoadingSubscription: Subscription;\n\n  constructor(private experiencesService: ExperiencesService) {}\n\n  ngOnInit(): void {\n    this.experiencesSubscription = this.experiencesService.experiencesSubject.subscribe(\n      (experiences: Experience[]) => {\n        this.experiences = experiences;\n      }\n    );\n    this.isLoadingSubscription = this.experiencesService.isLoadingSubject.subscribe(\n      (isLoading: boolean) => {\n        this.isLoading = isLoading;\n      }\n    );\n\n    this.experiencesService.fetchExperiences();\n  }\n\n  ngOnDestroy() {\n    this.experiencesSubscription.unsubscribe();\n    this.isLoadingSubscription.unsubscribe();\n  }\n}\n","<section class=\"exp\">\n  <div *ngIf=\"!isLoading, else spinner\" class=\"experiences\">\n    <div *ngFor=\"let experience of experiences\">\n      <mat-card class=\"card\">\n        <mat-card-title class=\"title\">\n          {{ experience.name }}\n        </mat-card-title>\n        <mat-card-subtitle class=\"subtitle\">\n          {{ experience.company }} - {{ experience.beginningDate.seconds * 1000 | date: 'MMMM yyyy' | titlecase}} -\n          {{ experience.duration }} mois\n        </mat-card-subtitle>\n        <img class=\"logo\" [src]=\"experience.logo\">\n        <mat-card-content class=\"content\">\n          {{ experience.content }}\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <ng-template #spinner>\n    <mat-spinner></mat-spinner>\n  </ng-template>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nimport { PdfViewerModule } from 'ng2-pdf-viewer';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TrainingsComponent } from './trainings/trainings.component';\nimport { HeaderComponent } from './navigation/header/header.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { MaterialModule } from './material.module';\nimport { SidebarComponent } from './navigation/sidebar/sidebar.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { environment } from 'src/environments/environment';\nimport { SkillsComponent } from './skills/skills.component';\nimport { SkillmatcardComponent } from './skills/skillmatcard/skillmatcard.component';\nimport { ExperiencesComponent } from './experiences/experiences.component';\nimport { CertificationsComponent } from './certifications/certifications.component';\n\nregisterLocaleData(localeFr, 'fr');\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TrainingsComponent,\n    HeaderComponent,\n    ContactComponent,\n    SidebarComponent,\n    HomeComponent,\n    AboutComponent,\n    SkillsComponent,\n    SkillmatcardComponent,\n    ExperiencesComponent,\n    CertificationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    NgbModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFirestoreModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    PdfViewerModule\n  ],\n  providers: [\n    {\n      provide: LOCALE_ID, useValue: 'fr'\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport {Router} from \"@angular/router\";\n\nimport { UIService } from '../shared/ui.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css'],\n})\nexport class ContactComponent implements OnInit, OnDestroy {\n  contactForm: FormGroup;\n  firebaseSubscription: Subscription;\n  messageSent = false;\n  errorMessageSent = false;\n\n  constructor(private httpClient: HttpClient, private uiService: UIService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.contactForm = new FormGroup({\n      firstname: new FormControl(null, [Validators.required]),\n      lastname: new FormControl(null, [Validators.required]),\n      email: new FormControl(null, [Validators.email, Validators.required]),\n      phonenumber: new FormControl(null, [Validators.required]),\n      message: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  onSubmit() {\n    const date = new Date();\n    const message = {\n      ...this.contactForm.value,\n      date,\n    };\n\n    this.httpClient\n      .post('https://marianeaudo-website.firebaseio.com/messages.json', message)\n      .subscribe(\n        () => {\n          this.messageSent = true;\n          this.uiService.showSnackbar('Votre message a bien été envoyé.');\n          this.router.navigate(['']);\n        },\n        (error) => {\n          this.errorMessageSent = true;\n          this.uiService.showSnackbar('Un problème est survenu lors de l\\'envoi de votre message, veuillez réessayer.');\n          this.router.navigate(['/contact']);\n\n        }\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.firebaseSubscription) {\n      this.firebaseSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"flex\">\n  <section class=\"contact-form\" *ngIf=\"!messageSent\">\n    <mat-card class=\"card\">\n      <mat-card-title class=\"title\">\n        Envoyez-moi un message!\n      </mat-card-title>\n      <mat-card-content>\n        <form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit(); contactForm.reset()\" fxLayout=\"column\"\n          fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Nom</mat-label>\n            <input matInput placeholder=\"Nom\" name=\"lastname\" formControlName=\"lastname\" class=\"form-control\">\n            <mat-error *ngIf=\"contactForm.get('lastname').errors?.required\">Le champ est obligatoire.</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Prénom</mat-label>\n            <input matInput placeholder=\"Prénom\" name=\"firstname\" formControlName=\"firstname\" class=\"form-control\">\n            <mat-error *ngIf=\"contactForm.get('firstname').errors?.required\">Le champ est obligatoire.</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input type=\"email\" matInput placeholder=\"Email\" name=\"email\" formControlName=\"email\" class=\"form-control\">\n            <mat-error *ngIf=\"contactForm.get('email').errors?.required\">Le champ est obligatoire.</mat-error>\n            <mat-error *ngIf=\"contactForm.get('email').errors?.email\">L'e-mail n'est pas valide.</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Numéro de téléphone</mat-label>\n            <input matInput placeholder=\"Numéro de téléphone\" name=\"phonenumber\" formControlName=\"phonenumber\"\n              class=\"form-control\">\n            <mat-error *ngIf=\"contactForm.get('phonenumber').errors?.required\">Le champ est obligatoire.</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Message</mat-label>\n            <textarea class=\"textarea\" rows=\"5\" matInput placeholder=\"Votre message\" name=\"message\"\n              formControlName=\"message\" class=\"form-control\"></textarea>\n            <mat-error *ngIf=\"contactForm.get('message').errors?.required\">Le champ est obligatoire.</mat-error>\n          </mat-form-field>\n          <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!contactForm.valid\">Envoyer</button>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </section>\n\n  <!-- <p *ngIf=\"messageSent\">Votre message a bien été envoyé!</p>\n  <p *ngIf=\"errorMessageSent\">Une erreur est survenue, veuillez réessayer.</p> -->\n\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Experience } from '../shared/cv.model';\r\nimport { UIService } from '../shared/ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExperiencesService {\r\n  experiences: Experience[] = [];\r\n  fbSubscription: Subscription;\r\n  experiencesSubject = new Subject<Experience[]>();\r\n  isLoading = true;\r\n  isLoadingSubject = new Subject<boolean>();\r\n  errorSubject = new Subject<string>();\r\n\r\n  constructor(private db: AngularFirestore, private uIService: UIService) {}\r\n\r\n  fetchExperiences() {\r\n    this.fbSubscription = this.db\r\n      .collection('experiences')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docArray) => {\r\n          return docArray.map((doc) => {\r\n            return {\r\n              ...(doc.payload.doc.data() as Experience),\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe(\r\n        (experiences: Experience[]) => {\r\n          this.experiences = experiences;\r\n          this.experiencesSubject.next(\r\n            [...this.experiences].sort((a, b) => {\r\n              return (b.beginningDate as any) - (a.beginningDate as any);\r\n            })\r\n          );\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n          this.uIService.showSnackbar(\r\n            'Une erreur est survenue, veuillez réessayer.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Training } from '../shared/cv.model';\r\nimport { UIService } from '../shared/ui.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TrainingsService {\r\n  trainings: Training[] = [];\r\n  fbSubscription: Subscription;\r\n  trainingsSubject = new Subject<Training[]>();\r\n  isLoading = true;\r\n  isLoadingSubject = new Subject<boolean>();\r\n  errorSubject = new Subject<string>();\r\n\r\n  constructor(private db: AngularFirestore, private uIService: UIService) {}\r\n\r\n  fetchTrainings() {\r\n      this.fbSubscription = this.db\r\n        .collection('trainings')\r\n        .snapshotChanges()\r\n        .pipe(\r\n          map((docArray) => {\r\n            return docArray.map((doc) => {\r\n              return {\r\n                ...(doc.payload.doc.data() as Training),\r\n              };\r\n            });\r\n          })\r\n        )\r\n        .subscribe((trainings: Training[]) => {\r\n          this.trainings = trainings;\r\n          this.trainingsSubject.next([...this.trainings]\r\n          .sort((a, b) => {\r\n            return (b.beginningDate as any) - (a.beginningDate as any);\r\n          })\r\n          );\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n        }, error => {\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n          this.uIService.showSnackbar('Une erreur est survenue, veuillez réessayer.');\r\n        }\r\n        )\r\n    ;\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Skill } from '../shared/cv.model';\nimport { Subscription, forkJoin } from 'rxjs';\nimport { SkillsService } from './skills.service';\n\n@Component({\n  selector: 'app-skills',\n  templateUrl: './skills.component.html',\n  styleUrls: ['./skills.component.css'],\n})\nexport class SkillsComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  isLoadingSubscription: Subscription;\n  skills: Skill[] = [];\n  skillsSubscription: Subscription;\n  skillCategories: string[] = [];\n\n  constructor(private skillsService: SkillsService) {}\n\n  ngOnInit(): void {\n    this.skillCategories = this.skillsService.getSkillCategories();\n    this.isLoadingSubscription = this.skillsService.isLoadingSubject.subscribe(\n      (isLoading: boolean) => {\n        this.isLoading = isLoading;\n      }\n    );\n\n    this.skillsSubscription = this.skillsService.skillSubject.subscribe(\n      (skills: Skill[]) => {\n        this.skills = skills;\n      }\n    );\n\n    this.skillsService.fetchSkills();\n  }\n\n  ngOnDestroy() {\n    this.isLoadingSubscription.unsubscribe();\n    this.skillsSubscription.unsubscribe();\n  }\n}\n","<section class=\"skillsglobal\">\n  <div *ngIf=\"!isLoading, else spinner\" class=\"skills\">\n  <div *ngFor=\"let category of skillCategories\">\n    <div [ngClass]=\"category | lowercase\">\n      <div class=\"categoryTitle\" *ngIf=\"!isLoading\">{{ category }}</div>\n      <div *ngFor=\"let skill of skills\" [ngClass]=\"(category | lowercase) +'card'\">\n        <app-skillmatcard *ngIf=\"skill.category == category\" [skill]=\"skill\"></app-skillmatcard>\n      </div>\n    </div>\n  </div>\n  </div>\n  <ng-template #spinner>\n    <mat-spinner></mat-spinner>\n  </ng-template>\n</section>\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Skill } from '../shared/cv.model';\r\nimport { UIService } from '../shared/ui.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SkillsService {\r\n  fbSubscription: Subscription;\r\n  isLoading = true;\r\n  isLoadingSubject = new Subject<boolean>();\r\n  skillSubject = new Subject<Skill[]>();\r\n  skills: Skill[] = [];\r\n  skillCategories = ['Back-end', 'Front-end', 'Divers'];\r\n\r\n  constructor(private db: AngularFirestore, private uIService: UIService) {}\r\n\r\n  fetchSkills() {\r\n    this.fbSubscription = this.db\r\n      .collection('skills')\r\n      .snapshotChanges()\r\n      .pipe(\r\n        map((docArray) => {\r\n          return docArray.map((doc) => {\r\n            return {\r\n              ...(doc.payload.doc.data() as Skill),\r\n            };\r\n          });\r\n        })\r\n      )\r\n      .subscribe(\r\n        (skills: Skill[]) => {\r\n          this.skills = skills;\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n          this.skillSubject.next([...this.skills].sort((a, b) => a.rank - b.rank\r\n          ));\r\n        },\r\n        (error) => {\r\n          this.isLoading = false;\r\n          this.isLoadingSubject.next(this.isLoading);\r\n          this.uIService.showSnackbar(\r\n            'Une erreur est survenue, veuillez réessayer.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getSkillCategories() {\r\n    return [...this.skillCategories];\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Skill } from 'src/app/shared/cv.model';\n\n@Component({\n  selector: 'app-skillmatcard',\n  templateUrl: './skillmatcard.component.html',\n  styleUrls: ['./skillmatcard.component.css']\n})\nexport class SkillmatcardComponent implements OnInit {\n\n  @Input() skill: Skill;\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card class=\"card\">\n  <mat-card-title class=\"title\">\n    {{ skill.name }}\n  </mat-card-title>\n  <img class=\"logo\" [src]=\"skill.image\">\n  <mat-card-content class=\"content\">\n    <span *ngIf=\"skill.content\">{{ skill.content }}</span>\n    <mat-progress-bar mode=\"determinate\" [value]=\"skill.level\"></mat-progress-bar>\n  </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { Header } from './application.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationService {\r\n  headers: Header[] = [\r\n    { title: 'Accueil', route: '/', icon: 'home' },\r\n    { title: 'À propos', route: '/apropos', icon: 'sentiment_satisfied' },\r\n    { title: 'Compétences', route: '/competences', icon: 'computer'},\r\n    { title: 'Certifications', route: '/certifications', icon: 'history_edu'},\r\n    { title: 'Formation', route: '/formation', icon: 'school' },\r\n    { title: 'Expériences', route: '/experiences', icon: 'card_travel' },\r\n    { title: 'Contact', route: '/contact', icon: 'contacts' },\r\n  ];\r\n\r\n  private selectedHeader: Header;\r\n  selectedHeaderSubject = new Subject<Header>();\r\n\r\n  getHeaders() {\r\n    return [...this.headers];\r\n  }\r\n\r\n  setSelectedHeader(header: Header) {\r\n    this.selectedHeader = header;\r\n    this.selectedHeaderSubject.next({ ...this.selectedHeader });\r\n  }\r\n}\r\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { ApplicationService } from 'src/app/shared/application.service';\nimport { Header } from 'src/app/shared/application.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  headers: Header[] = [];\n  selectedHeader =  this.applicationService.getHeaders()[0];\n  selectedHeaderSubscription: Subscription;\n  routerSubscription: Subscription;\n\n  constructor(\n    private applicationService: ApplicationService,\n    private router: Router\n  ) {}\n\n  @Output() sidenavToggle = new EventEmitter<void>();\n\n  ngOnInit(): void {\n    this.headers = this.applicationService.getHeaders();\n    this.routerSubscription = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.applicationService.setSelectedHeader(\n          this.headers.find((header) => header.route === event['url'])\n        );\n      }\n    });\n    this.selectedHeaderSubscription = this.applicationService.selectedHeaderSubject.subscribe(\n      (header: any) => {\n        this.selectedHeader = header;\n      }\n    );\n  }\n\n  onToggleSidenav() {\n    this.sidenavToggle.emit();\n  }\n\n  isSelected(header: Header) {\n    if (header.title === this.selectedHeader.title) {\n      return 'selected';\n    }\n  }\n\n  ngOnDestroy() {\n    this.selectedHeaderSubscription.unsubscribe();\n    this.routerSubscription.unsubscribe();\n  }\n}\n","<mat-toolbar class=\"toolbar\" color=\"primary\">\r\n  <div fxHide.gt-sm>\r\n    <mat-icon class=\"toggle\" (click)=\"onToggleSidenav()\">menu</mat-icon>\r\n</div>\r\n  <div fxFlex fxLayout fxLayoutAlign=\"space-around\" fxHide.lt-md>\r\n    <ul fxLayout fxLayoutGap=\"50px\" class=\"navigation-items\">\r\n      <li *ngFor=\"let header of headers\" routerLinkActive>\r\n        <a [ngClass]=\"isSelected(header)\" [routerLink]=\"header.route\">{{header.title}}</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</mat-toolbar>\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TrainingsComponent } from './trainings/trainings.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { SkillsComponent } from './skills/skills.component';\nimport { ExperiencesComponent } from './experiences/experiences.component';\nimport { CertificationsComponent } from './certifications/certifications.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'formation', component: TrainingsComponent },\n  { path: 'apropos', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'competences', component: SkillsComponent},\n  { path: 'experiences', component: ExperiencesComponent},\n  { path: 'certifications', component: CertificationsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatProgressBarModule\r\n    ],\r\n  exports: [\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatProgressBarModule\r\n    ]\r\n})\r\nexport class MaterialModule {\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Certification } from '../shared/cv.model';\nimport { CertificationsService } from './certifications.service';\n\n@Component({\n  selector: 'app-certifications',\n  templateUrl: './certifications.component.html',\n  styleUrls: ['./certifications.component.css'],\n})\nexport class CertificationsComponent implements OnInit, OnDestroy {\n  certifications: Certification[] = [];\n  certificationsSubscription: Subscription;\n  isLoading = true;\n  isLoadingSubscription: Subscription;\n\n  constructor(private certificationsService: CertificationsService) {}\n\n  ngOnInit(): void {\n    this.certificationsSubscription = this.certificationsService.certificationsSubject.subscribe(\n      (certifications: Certification[]) => {\n        this.certifications = certifications;\n      }\n    );\n    this.isLoadingSubscription = this.certificationsService.isLoadingSubject.subscribe(\n      (isLoading: boolean) => {\n        this.isLoading = isLoading;\n      }\n    );\n    this.certificationsService.fetchCertifications();\n  }\n\n  onOpenPdf(source: string): void {\n    window.open(source);\n  }\n\n  ngOnDestroy(): void {\n    this.certificationsSubscription.unsubscribe();\n    this.isLoadingSubscription.unsubscribe();\n  }\n}\n","<section class=\"certif\">\n  <div *ngIf=\"!isLoading, else spinner\" class=\"certifications\">\n    <div *ngFor=\"let certification of certifications\">\n\n      <mat-card class=\"card\">\n        <mat-card-title class=\"title\">\n          {{ certification.name }}\n        </mat-card-title>\n        <mat-card-subtitle class=\"subtitle\">\n          {{ certification.date.seconds * 1000 | date: 'MMMM yyyy' | titlecase}}, {{ certification.school }}\n        </mat-card-subtitle>\n        <mat-card-subtitle>\n          par {{ certification.teacher }}\n        </mat-card-subtitle>\n        <mat-card-content class=\"content\" (click)=\"onOpenPdf(certification.source)\">\n          <pdf-viewer [src]=certification.source  [render-text]=\"true\" [original-size]=\"false\" [autoresize]=\"true\" style=\"display: block; max-width: 100px;\"></pdf-viewer>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n  <ng-template #spinner>\n    <mat-spinner></mat-spinner>\n  </ng-template>\n</section>\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UIService{\r\n\r\n  constructor(private snackbar: MatSnackBar) {}\r\n\r\n  showSnackbar(message) {\r\n    this.snackbar.open(message, null, {\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}